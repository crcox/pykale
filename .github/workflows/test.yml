# This workflow will install Python dependencies, run tests, and report the coverage with a variety of Python versions and OSs
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron:  '0 0 * * *' # every midnight

jobs:
  test:
    name: Test (${{ matrix.os }}, python version ${{ matrix.python-version }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ["3.7", "3.8"]
        exclude:
          - os: windows-latest
            python-version: "3.7"
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python using Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          conda install -c conda-forge rdkit
          pip install pyparsing==2.4.7
          pip install torch==1.7.1+cpu -f https://download.pytorch.org/whl/torch_stable.html
          pip install torchvision==0.8.2+cpu -f https://download.pytorch.org/whl/torch_stable.html
          pip install torch-scatter==2.0.7 -f https://pytorch-geometric.com/whl/torch-1.7.0+cpu.html
          pip install torch-sparse==0.6.12 -f https://pytorch-geometric.com/whl/torch-1.7.0+cpu.html
          pip install torch-cluster==1.5.9 -f https://pytorch-geometric.com/whl/torch-1.7.0+cpu.html
          pip install torch-spline-conv==1.2.1 -f https://pytorch-geometric.com/whl/torch-1.7.0+cpu.html
          pip install torch-geometric==1.7.0 --ignore-installed certifi
          pip install -e .[dev]
        shell: bash -l {0}
      - name: Run tests
        id: run_tests
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 180 # Very long
          max_attempts: 3
          retry_wait_seconds: 10800 # Wait 180 minutes before trying again (fail likely because server down)
          command: |
            pytest --nbmake --cov=kale
          shell: bash -l {0}
      - name: Determine coverage
        run: |
          coverage xml
        shell: bash -l {0}
      - name: Report coverage
        uses: codecov/codecov-action@v1
      - name: Report failure via issue
        uses: JasonEtco/create-an-issue@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          filename: .github/ISSUE_TEMPLATE/action-fail.md
        if: ${{ always() && contains('failure', steps.*.outcome)  && github.event_name == 'schedule'}}
